name: CI

'on':
    pull_request:
    push:
        branches:
          - develop

env:
    UBSAN_OPTIONS: print_stacktrace=1

jobs:
    posix:
        strategy:
            fail-fast: false
            matrix:
                include:
                  - os: ubuntu-22.04
                    make: test-debug
                    info: clang + test-debug

                  - os: ubuntu-22.04
                    make: test-release
                    info: clang + test-release

        name: '${{matrix.os}}: ${{matrix.info}}'
        runs-on: ${{matrix.os}}

        steps:
          - uses: actions/checkout@v2
            with:
                submodules: true

          - name: Reuse ccache directory
            uses: actions/cache@v2
            with:
                path: ~/.ccache
                key: '${{matrix.os}} ${{matrix.info}} ccache-dir ${{github.ref}} run-${{github.run_number}}'
                restore-keys: |
                    ${{matrix.os}} ${{matrix.info}} ccache-dir ${{github.ref}} run-'
                    ${{matrix.os}} ${{matrix.info}} ccache-

          - name: Install packages
            run: |
                sudo apt update
                sudo apt install --allow-downgrades -y pep8 $(cat third_party/userver/scripts/docs/en/deps/${{matrix.os}}.md | tr '\n' ' ')
                sudo apt install --allow-downgrades -y $(cat deps/${{matrix.os}}.txt | tr '\n' ' ')

          - name: Setup ccache
            run: |
                ccache -M 2.0GB
                ccache -s

          - name: Clang version
            run: |
                clang --version

          - name: Run ${{matrix.make}}
            run: |
                make ${{matrix.make}}

          - name: Test install ${{matrix.make}}
            if: matrix.make == 'test-release'
            run: |
                make dist-clean
                make install PREFIX=`pwd`/local_installation/

          - name: Test run after install
            if: matrix.make == 'test-release'
            run: |
                ./local_installation/bin/telegram_bot --config=./local_installation/etc/telegram_bot/static_config.yaml &

          - name: Check work run service
            if: matrix.make == 'test-release'
            run: |
                ps aux | grep telegram_bot | grep config && curl http://localhost:8080/ping -v

          - name: Stop all
            if: matrix.make == 'test-release'
            run: |
                killall telegram_bot

